name: my_plugin  # pypi package name (normalize to identifier)
publisher: pub
display_name: My Plugin
license: BSD-3-Clause
entry_point: npe2_tester
contributions:
  # perhaps we exclude "my_plugin" and do the prefixing ourself
  # or just enforce on validation (probably this)
  commands:
    - id: my_plugin.hello_world
      title: Hello World
    - id: my_plugin.another_command
      title: Another Command
    - id: my_plugin.tiff_reader
      title: My Tiff Reader
      python_name: npe2_tester:get_reader
    - id: my_plugin.id
      title: "Image to Labels"
      enablement: 'active_layer_type == "image"'
    - id: my_plugin.affinder
      title: Affinder
      python_name: npe2_tester.module.sub.sub:Affinder
      # why do we both a command id and python_name?
      # entertain possibility of *requiring* python_name

  configuration:  # call it settings?
    properties:
      my_plugin.reader.lazy:
        type: boolean
        default: false
        title: Load lazily
        description: Whether to load images lazily with dask

  readers:
    - command: my_plugin.tiff_reader
      filename_patterns: ["*.tif", "*.tiff"]
      accepts_directories: false
  writers:
    - command: my_plugin.tiff_writer
      # is this enablement?
      # when: "active_image_type in ..."
      layer_types: ["image", "labels"]  # list of lists?
      filename_patterns: ["*.tif", "*.tiff"]
      # what about containers that can write out multiple
      # layers into a single file

  widgets:
    - command: my_plugin.affinder


  keybindings:
    - command: my_plugin.hello_world
      key: ctrl+f1
  mousebindings:
    - command: ...
      gesture: drag / click / doubleclick, etc...

  menus:
    # prefix all napari menus with napari
    # all of these either must be provided or appear in submenus
    /napari/layer_context:
      - submenu: mysubmenu
      - command: my_plugin.hello_world
    # question:
    # A) are submenus unique across all plugins
    # B) if so, how? ... look at vscode does this.
    # ... aim to make these globally accessible across extensions
    # ... figure out how.
    mysubmenu:
      - command: my_plugin.another_command
      - command: my_plugin.affinder
    some_other_plugins:
      - command: my_plugin.hello_world
  submenus:
    - id: mysubmenu
      label: My SubMenu
      # why not put menu items here:?
      # contents:
        # - command: my_plugin.another_command

  themes:
    - label: "Monokai"
      id: "monokai"
      type: "dark"
      colors:
        canvas: "#000000"
        console: "#000000"
        background: "#272822"
        foreground: "#75715e"
        primary: "#cfcfc2"
        secondary: "#f8f8f2"
        highlight: "#e6db74"
        text: "#a1ef34"
        warning: "#f92672"
        current: "#66d9ef"
